model User {
    id            String   @id @default(uuid())
    name          String
    email         String   @unique
    googleId      String   @unique
    photo_profile String?
    role          Role     @default(PENDING)
    familyId      String?
    family        Family?  @relation(fields: [familyId], references: [id])
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt

    accounts       Account[]
    transactions   Transaction[]
    monthlyBudgets MonthlyBudget[]
    Category       Category[]
}

model Family {
    id        String   @id @default(uuid())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    users User[]
}

enum Role {
    OWNER
    COLLABORATOR
    VIEWER
    PENDING
}

model Account {
    id        String   @id @default(uuid())
    name      String
    userId    String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user         User          @relation(fields: [userId], references: [id])
    transactions Transaction[]
}

model Category {
    id        String       @id @default(uuid())
    name      String
    type      CategoryType
    icon      String
    userId    String
    createdAt DateTime     @default(now())
    updatedAt DateTime     @updatedAt

    user           User            @relation(fields: [userId], references: [id])
    transactions   Transaction[]
    monthlyBudgets MonthlyBudget[]
}

enum CategoryType {
    INCOME
    EXPENSE
}

model Transaction {
    id         String   @id @default(uuid())
    date       DateTime
    amount     Int
    note       String?
    userId     String
    accountId  String
    categoryId String
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    user     User     @relation(fields: [userId], references: [id])
    account  Account  @relation(fields: [accountId], references: [id])
    category Category @relation(fields: [categoryId], references: [id])
}

model MonthlyBudget {
    id         String   @id @default(uuid())
    userId     String
    categoryId String
    month      Int
    year       Int
    amount     Int
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    user     User     @relation(fields: [userId], references: [id])
    category Category @relation(fields: [categoryId], references: [id])
}
